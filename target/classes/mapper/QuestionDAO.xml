<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gluxen.dao.QuestionDAO">
  <resultMap id="BaseResultMap" type="com.gluxen.PO.Question">
    <id column="question_id" jdbcType="BIGINT" property="questionId" />
    <result column="inquiry_id" jdbcType="BIGINT" property="inquiryId" />
    <result column="question_label" jdbcType="VARCHAR" property="questionLabel" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="stem" jdbcType="VARCHAR" property="stem" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    question_id, inquiry_id, question_label, answer, stem, remark
  </sql>
  <select id="selectByExample" parameterType="com.gluxen.PO.QuestionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from question
    where question_id = #{questionId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from question
    where question_id = #{questionId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gluxen.PO.QuestionExample">
    delete from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="question_id" keyProperty="questionId" parameterType="com.gluxen.PO.Question" useGeneratedKeys="true">
    insert into question (inquiry_id, question_label, answer, 
      stem, remark)
    values (#{inquiryId,jdbcType=BIGINT}, #{questionLabel,jdbcType=VARCHAR}, #{answer,jdbcType=VARCHAR}, 
      #{stem,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="question_id" keyProperty="questionId" parameterType="com.gluxen.PO.Question" useGeneratedKeys="true">
    insert into question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="inquiryId != null">
        inquiry_id,
      </if>
      <if test="questionLabel != null">
        question_label,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="stem != null">
        stem,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="inquiryId != null">
        #{inquiryId,jdbcType=BIGINT},
      </if>
      <if test="questionLabel != null">
        #{questionLabel,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="stem != null">
        #{stem,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gluxen.PO.QuestionExample" resultType="java.lang.Long">
    select count(*) from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update question
    <set>
      <if test="record.questionId != null">
        question_id = #{record.questionId,jdbcType=BIGINT},
      </if>
      <if test="record.inquiryId != null">
        inquiry_id = #{record.inquiryId,jdbcType=BIGINT},
      </if>
      <if test="record.questionLabel != null">
        question_label = #{record.questionLabel,jdbcType=VARCHAR},
      </if>
      <if test="record.answer != null">
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
      <if test="record.stem != null">
        stem = #{record.stem,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update question
    set question_id = #{record.questionId,jdbcType=BIGINT},
      inquiry_id = #{record.inquiryId,jdbcType=BIGINT},
      question_label = #{record.questionLabel,jdbcType=VARCHAR},
      answer = #{record.answer,jdbcType=VARCHAR},
      stem = #{record.stem,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gluxen.PO.Question">
    update question
    <set>
      <if test="inquiryId != null">
        inquiry_id = #{inquiryId,jdbcType=BIGINT},
      </if>
      <if test="questionLabel != null">
        question_label = #{questionLabel,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="stem != null">
        stem = #{stem,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where question_id = #{questionId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gluxen.PO.Question">
    update question
    set inquiry_id = #{inquiryId,jdbcType=BIGINT},
      question_label = #{questionLabel,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      stem = #{stem,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where question_id = #{questionId,jdbcType=BIGINT}
  </update>
</mapper>