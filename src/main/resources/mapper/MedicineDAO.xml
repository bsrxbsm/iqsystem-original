<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gluxen.dao.MedicineDAO">
  <resultMap id="BaseResultMap" type="com.gluxen.PO.Medicine">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="medicine_name" jdbcType="VARCHAR" property="medicineName" />
    <result column="medicine_price" jdbcType="DECIMAL" property="medicinePrice" />
    <result column="medicine_stock" jdbcType="INTEGER" property="medicineStock" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, medicine_name, medicine_price, medicine_stock
  </sql>
  <select id="selectByExample" parameterType="com.gluxen.PO.MedicineExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from medicine
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from medicine
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from medicine
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gluxen.PO.MedicineExample">
    delete from medicine
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.gluxen.PO.Medicine" useGeneratedKeys="true">
    insert into medicine (medicine_name, medicine_price, medicine_stock
      )
    values (#{medicineName,jdbcType=VARCHAR}, #{medicinePrice,jdbcType=DECIMAL}, #{medicineStock,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.gluxen.PO.Medicine" useGeneratedKeys="true">
    insert into medicine
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="medicineName != null">
        medicine_name,
      </if>
      <if test="medicinePrice != null">
        medicine_price,
      </if>
      <if test="medicineStock != null">
        medicine_stock,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="medicineName != null">
        #{medicineName,jdbcType=VARCHAR},
      </if>
      <if test="medicinePrice != null">
        #{medicinePrice,jdbcType=DECIMAL},
      </if>
      <if test="medicineStock != null">
        #{medicineStock,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gluxen.PO.MedicineExample" resultType="java.lang.Long">
    select count(*) from medicine
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update medicine
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.medicineName != null">
        medicine_name = #{record.medicineName,jdbcType=VARCHAR},
      </if>
      <if test="record.medicinePrice != null">
        medicine_price = #{record.medicinePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.medicineStock != null">
        medicine_stock = #{record.medicineStock,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update medicine
    set id = #{record.id,jdbcType=INTEGER},
      medicine_name = #{record.medicineName,jdbcType=VARCHAR},
      medicine_price = #{record.medicinePrice,jdbcType=DECIMAL},
      medicine_stock = #{record.medicineStock,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gluxen.PO.Medicine">
    update medicine
    <set>
      <if test="medicineName != null">
        medicine_name = #{medicineName,jdbcType=VARCHAR},
      </if>
      <if test="medicinePrice != null">
        medicine_price = #{medicinePrice,jdbcType=DECIMAL},
      </if>
      <if test="medicineStock != null">
        medicine_stock = #{medicineStock,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gluxen.PO.Medicine">
    update medicine
    set medicine_name = #{medicineName,jdbcType=VARCHAR},
      medicine_price = #{medicinePrice,jdbcType=DECIMAL},
      medicine_stock = #{medicineStock,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>